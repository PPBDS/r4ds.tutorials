## Priorities

Exploration Tutorial



### Me

Data Import and Numbers took 90/80 minutes last summer. That is too long. Edit them so that they are closer to 60 minutes.

Communication is the tutorial which would most benefit from a clean up. 

Put a new version of R4DS on CRAN. This will require dealing with a couple of annoying NOTES from R CMD check.

In earlier tutorials, switch to GitHub pages in place of Rpubs? Probably not.

Create a Positron Tutorial. Call it tutorial 30.

Expand AI material in getting help tutorial.

Ensure that any useful material from Quarto R4DS chapter 28 is added to the RStudio and Quarto tutorial.

Add a section to Quarto Websites Introduction tutorial which covers much of the material in Quarto Formats R4DS chapter 29. See below for some info.

Ensure that RStudio and Code and RStudio and Github tutorials link up well together.

Write one Exploration Project tutorial.

Tighten some longer tutorials so that they are more like 60 minutes. See below.

### Mark

For each of these tutorials, please complete them (send me the html answers by email) and submit a PR with your corrections and changes. This is all somewhat high priority because students will be completing all these tutorials on M/T/W next week.

Clean 03.

Clean 04a and 04b.

Clean 05.

Clean tutorial 06. I have fixed all the major issues. But please fix remaining typos and other issues.



### Khang

Test Data Visualization tutorial. Fix up any problems. 

### Satvika

Test both Quarto Websites tutorials. Note that they have been reworked to use Github pages.


### Sharav

Tutorial 24

* Find the complaints in Discord and email me the link. #tutorials channel? #general channel?
* Fix the complaints.
* general quality improvements, as with knowledge drops, typos and so on.s

Tutorial 26

* Find the complaints in Discord and email me the link. #tutorials channel? #general channel?
* Fix those complaints.
* Read: https://ppbds.github.io/tutorial.helpers/articles/books.html
* Re-read the chapter. Quality check for entire tutorial.



### Notes from DK

Would be cool to test commands which we expect students to enter into the Console. Of course, written questions don't allow for test chunks, but we can just make our own chunks, with include = FALSE. They will run during tutorial creation and fail if the command no longer works. Of course, in most cases, we would need to create, on the fly, the file which those commands access.

Make more use of https://ggplot2-book.org/ and https://docs.posit.co/ide/user/


The styler package and its use seem important and worth discussing. See https://www.youtube.com/watch?v=_nAfJ-5nkcU&authuser=0 for other interesting options. Note its addition to the new verion of RStudio.


### Exploration Projects

Original idea for this comes from Jade. Key points:

* Ultimate standard for success of the course is the quality of student final projects. So, the more time that students practice making final projects, the better.

* We want students to have a professional portfolio. These projects can, perhaps with some more work, serve as starter elements of that portfolio.

* Students vary in terms of their talent and willingness to work hard. Exploration Projects provide an opportunity for skilled and diligent students to push themselves.

* Projects start with standard construction of a website, so require that students have completed the two Quarto websites tutorial. 

* We encourage the use of AI extensively. Indeed, a primary purpose of these projects is to force students to make greater use of AI tools. There is no more important skill to teach them.

* All the resulting URLs are gathered and shared with the class as a whole, with the best results highlighted.

* We specify the data that should be used for the plot, at least for the first few tutorials. Perhaps the naming convention is EP: Diamnds, EP: Crime, and so on --- where "EP" stands for Exploration Project and the name of the dataset to use follows the colon.

* Ideally, we might connect these projects to cool-looking professional work. That is, we find a nice looking New York Times data project, with some public data, and then encourage students to make something which looks just as good if not better.


## Leftover Material from Chapter 29

Maybe find a home for this stuff?

The most important set of options controls if your code block is executed and what results are inserted in the finished report:

eval: false prevents code from being evaluated. (And obviously if the code is not run, no results will be generated). This is useful for displaying example code, or for disabling a large block of code without commenting each line.

include: false runs the code, but doesn’t show the code or results in the final document. Use this for setup code that you don’t want cluttering your report.

results: hide hides printed output; fig-show: hide hides plots.

error: true causes the render to continue even if code returns an error. This is rarely something you’ll want to include in the final version of your report, but can be very useful if you need to debug exactly what is going on inside your QMD. It’s also useful if you’re teaching R and want to deliberately include an error. The default, error: false causes rendering to fail if there is a single error in the document.

As you work more with knitr, you will discover that some of the default chunk options don’t fit your needs and you want to change them.

When inserting numbers into text, format() is your friend.

Lots more stuff on figures, caching, tables, et cetera.

### Tutorial Times from Summer 2024

# A tibble: 25 × 3
   source                        minutes     N
   <fct>                           <dbl> <int>
 1 getting-started                  15     136
 2 introduction                     42     121.  # already lengthed
 3 data-visualization               89     102.  # re-written
 4 rstudio-and-code                120     101.  # Split in 2
 5 data-transformation              50      98
 6 rstudio-and-github               95      89.  # Split in 2
 7 data-tidying                     90      94.  # Shortened
 8 terminal                         93      91.  # Rewritten. Split in 2?
 9 data-import                      90      89
10 getting-help                     29.5    92
11 layers                           60      88
12 exploratory-data-analysis       100      83
13 communication                    90      78   # Removed some material
14 an-introduction-to-tidycensus    40      77
15 logical-vectors                  60      90
16 quarto-websites                  97.5    90   # Split in 2
17 numbers                          80      78
18 strings                          63      73
19 regular-expressions              33      78
20 factors                          40      79
21 dates-and-times                  40      80
22 data-project                     45      76
23 missing-values                   30      71
24 joins                            67.5     2
25 spreadsheets                     25       2
