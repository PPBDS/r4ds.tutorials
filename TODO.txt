## Priorities




Update RStudio and Github to use Quarto 1.4. (Maybe check RStudio and Code as well.) Probably want to switch away from command line to quarto() commands, at least for the first example. Then show the command line in a third example. Maybe?

The styler package and its use seem important and worth discussing. See https://www.youtube.com/watch?v=_nAfJ-5nkcU&authuser=0 for other interesting options.

In Introduction, Make more clear that you can pull out the tutorial into its own window. But is that really a good idea? Explain to students how to move border pane around. Do this in tutorial.helpers?

 In the introduction to the setting of RStudio, there could be more information on how to manipulate the size of each pane (ex. to view the content of the tutorial, to have more space for coding).

Q&A sections, at least in RStudio and Code.

Left off tutorial improvements at strings, which was completed.

Jade's idea for "Exploration" sections at the end of each tutorial. Give students some choices. Let them explore. Let them make something. There is no wrong answer.

Maybe much of the material in Quarto R4DS chapter belongs in RStudio and Github chapter, allowing Quarto tutorial to focus on projects.

Do RStudio and Code and RStudio and Github tutorials link up well together? Note that the former does do an RPubs publishing at the end. 

Release new version to CRAN

## format_tutorial hackery

Biggest hackery is our use of the "file =" trick to bring in code examples which would mess up the formatting of this document (and, even worse, mess up the use of format_tutorial()) if we just included them raw, like with ```` or ````markdown or ````{verbatim}. The trick works in that nothing breaks. But it is annoying! We would much rather see the code which we are including **right there** instead of having to look it up in a separate file.

More details: parsermd(), used by format_tutorial(), is finicky. We don't want it to consider the headers in this example QMD as "real" headers. We want them to be ignored. Seems like the only way to do that is to include the entire document in an R code chunk with three backticks. Then, format_tutorial() does what we want. But! Then knitting the tutorial fails totally. You need to switch to four backticks, at the start and end. Knitting is now fine, but, if you run format_tutorial(), you will mess up the exercise numbering and chunk labels. Could not solve this! So, just use "file =" trick. Using other code examples, like empty chunks, does not mess up format_tutoria() but does mess up the displayed outline of this document, which is annoying.

## Other Stuff

Once RStudio release Chocolate Cosmos comes out (meaning Quarto 1.4 installed by default) and the **quarto** packae is updated, we can revisit getting rid of RPubs and/or making use of quarto:: commands.

Check to make sure that the plots only use things which have been taught, especially oecd and portland in chapters 10 and 11.

Posit Cloud is the future. RPubs is the past. Replace RPubs everywhere with Posit Cloud, and test that it works! rsconnect seems like a much more important package than I used to think, or maybe it is really devoted to Posit Connect?

## Zayan

Work on tutorial Data transformation in chapter 3. Lots of improvements to be made to the knowledge drops.




Chapters 4 and 8 are OK, but both (especially 4) could use more work.

How do we link to a different tutorial in this package?

Fix chapter 11

Consider folding the Introduction material into Chapter 1. 

Maybe use 5 or 6 of these plots: 
https://www.cedricscherer.com/slides/RLadiesTunis-2021-favorite-ggplot-extensions.pdf 

Also, maybe stuff from: https://www.cedricscherer.com/2019/08/05/a-ggplot2-tutorial-for-beautiful-plotting-in-r/. 

This is a cool animation: https://github.com/jschoeley/de0anim Do it here. Or show it somewhere else? Or create an animation tutorial?


Why does testing on Windows take 15 minutes, while testing on Mac takes < 3? Would be nice to fix this so that we could start testing on CRAN again.

Would be nice to do at least some testing of knitting the tutorials on CRAN.

Finish public project in logical vectors.

Rewrite Chapter 1. Maybe include some material from r4ds-material-to-add.txt. 

Why don't links open if you pull out the tutorial into its own window?

Each chapter ends with a "Graduation Exercise," allowing the student to create something, generally a plot, from scratch. This material is additional to whatever the chapter covered. It could be left out of the assignment by a professor who did not find the exercises useful. Everything in the Graduation Exercise was covered in this chapter, or in previous ones. The GE get more complex as you go through the book. At the beginning, they are just plots you do in the tutorial. Then, after RStudio and Code, they are plots which you do on your computer. Then, after RStudio and Github, they always start with a repo which you then connect to your computer. 

Each Graduation Exercise should use material specific to that chapter. So, for example, the GE for the Spreadsheet tutorial would start with some spreadsheet data. Also, each GE would increase in complexity and/or decrease in the specificity of the instructions provided. The first few would be very didactic and step-by-step. For the last few, the first question might just be: "Set up a new repo, connect to an R project on your computer, create a quarto document called `analysis.qmd`, render it, run list.files() at the Console, CP/CR." And so on.

Need to make sure the early tutorials cover things like scale_x_log10(labels = scales::comma_format()) since we use it in class in weeks 1 and 2.

Looks like we could stop using RPubs because Quarto Pub allows you to publish a single document:

quarto publish quarto-pub document.qmd

Expand Intro/Summary for Web scraping.

Chapter 16 tutorial. too_short = "debug" seems like a typo/

Get rid of group_by everywhere, except when absolutely necessary.


Good tibbles to use include diamonds, gss_cat (maybe storms), midwest, mpg,   (There are also several time series data sets, including txhousing.)

Think harder about what we need to import. For most packages, we can just use them in Suggests. When students do Start Tutorial a tutorial with such a package, they will be prompted to install it. And that is fine! 

Make use of https://ggplot2-book.org/ in lots of places. It is a great reference!

Might be nice if each middle chapter tutorial (like factors, dates and times, et cetera) finished with a beautiful plot which required the use of skills from that chapter to manipulate the data first. An example is babynames in Strings chapter.

Even better, instead of a line-by-line plot built in the tutorial, we should have students create this plot oustide of the tutorial. It should be an exercise, like RStudio and Github, which starts with a student making a repo, connecting it to an RStudio project, starting a quarto document, loading libraries and data, building a plot, rendering the document so it looks nice and then publishing the plot on the web. Students need more practice with all these steps.

Make more use of RStudio User Guide: https://docs.posit.co/ide/user/

Maybe File -> like commands should be in italics, not backticks? That seems to be the way that R4DS does it.

Review RStudio and Code. Include material from r4ds-material

Review RStudio and Github. Include material from r4ds-material

Review Quarto Websites. Include material from r4ds-material

Review Terminal. Include material from r4ds-material

## Other thoughts

* You can also invalidate stored work by changing the ID or version of your tutorial. If you publish tutorials within R packages then the version is automatically derived from the version of the package.


